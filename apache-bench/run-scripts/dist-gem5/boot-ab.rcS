#!/bin/bash
# Authors: Mohammad Alian <malian2@illinois.edu>
# boot gem5, start mysql-server, load the dataset into the db
# and take a checkpoint
#
# The idea of this script is the same as
# "configs/boot/hack_back_ckpt.rcS" by Joel Hestness
# Please look into that for more info
#
source /root/.bashrc

# Retrieve dist-gem5 rank and size parameters using magic keys
MY_RANK=$(/sbin/m5 initparam dist-rank)
[ $? = 0 ] || { echo "m5 initparam failed"; exit -1; }
MY_SIZE=$(/sbin/m5 initparam dist-size)
[ $? = 0 ] || { echo "m5 initparam failed"; exit -1; }

echo "***** Start boot script! *****"
if [ "${RUNSCRIPT_VAR+set}" != set ]
then
    # Signal our future self that it's safe to continue
    echo "RUNSCRIPT_VAR not set! Setting it ..."
    export RUNSCRIPT_VAR=1
else
    echo "RUNSCRIPT_VAR is set!"
    if [ "$MY_RANK" == "0" ]
    then
        # We've already executed once, so we should exit
        echo "calling m5 exit ..."
        /sbin/m5 exit 1
    else
        echo "Loading new script ..."
        /sbin/m5 readfile > /tmp/runscript1.sh

        # Execute the new runscript
        if [ -s /tmp/runscript1.sh ]
        then
            /bin/bash /tmp/runscript1.sh
        else
            echo "Script not specified. Exiting ..."
            /sbin/m5 exit 1
        fi
    fi
fi
# set hostname
/bin/hostname tux${MY_RANK}

# Keep MAC address assignment simple for now ...
(($MY_RANK > 97)) && { echo "(E) Rank must be less than 98"; /sbin/m5 abort; }
((MY_ADDR = MY_RANK + 2))
if (($MY_ADDR < 10))
then
    MY_ADDR_PADDED=0${MY_ADDR}
else
    MY_ADDR_PADDED=${MY_ADDR}
fi

/sbin/ifconfig eth0 hw ether 00:90:00:00:00:${MY_ADDR_PADDED}
/sbin/ifconfig eth0 10.0.0.${MY_ADDR} netmask 255.255.255.0 up

/sbin/ifconfig -a

echo "Hello from $MY_RANK of $MY_SIZE"

if [ "$MY_RANK" == "0" ]
then
    # restart mysql server in safemode
    /bin/bash service mysql stop
    mysqld_safe --skip-grant-tables &

    # wait for the mysql server to start
    while :
    do
        if pgrep -x "mysqld" > /dev/null
        then
            sleep 1
            break
        else
            echo "mysql is not started yet"
            ps aux | egrep mysqld
            sleep 1
        fi
    done

    cd /root/apache-bench 

    # create mysql db and table
    php -f create-db-tbl.php

    # load db by the generated dataset
    mysqlimport -u root --local benchmark_0 benchmark_tbl.ini --lines-terminated-by="\n" --fields-terminated-by="," -v

    # take a checkpoint
    /sbin/m5 checkpoint

    echo "release the clients"
    #release the other ranks
    for ip in `seq 3 $(($MY_SIZE+1))`;
    do
        echo "release" | netcat -C 10.0.0.$ip 8000
        echo "released 10.0.0.$ip"
    done

    /sbin/m5 checkpoint 1
    echo "iterate through the script"

else
    echo "wait for RANK0 to take checkpoint"
    netcat -l -p 8000
    echo "released, let's go ahead and execute the rest"
fi

#THIS IS WHERE EXECUTION BEGINS FROM AFTER RESTORING FROM CKPT
if [ "$RUNSCRIPT_VAR" -eq 1 ]
then
    # Signal our future self not to recurse infinitely
    export RUNSCRIPT_VAR=2
    # Read the script for the checkpoint restored execution
    echo "Loading new script..."
    /sbin/m5 readfile > /tmp/runscript1.sh

    # Execute the new runscript
    if [ -s /tmp/runscript1.sh ]
    then
        /bin/bash /tmp/runscript1.sh
    else
        echo "Script not specified"
    fi
fi

echo "Fell through script. Exiting ..."
/sbin/m5 exit 1
