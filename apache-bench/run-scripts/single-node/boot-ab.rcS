#!/bin/bash
# Authors: Mohammad Alian <malian2@illinois.edu>
# boot gem5, start mysql-server, load the dataset into the db
# and take a checkpoint
#
# The idea of this script is the same as
# "configs/boot/hack_back_ckpt.rcS" by Joel Hestness
# Please look into that for more info
#
source /root/.bashrc

echo "***** Start boot script! *****"
if [ "${RUNSCRIPT_VAR+set}" != set ]
then
    # Signal our future self that it's safe to continue
    echo "RUNSCRIPT_VAR not set! Setting it ..."
    export RUNSCRIPT_VAR=1
else
    echo "RUNSCRIPT_VAR is set!"
        # We've already executed once, so we should exit
        echo "calling m5 exit ..."
        /sbin/m5 exit 1
fi
# set hostname
/bin/hostname tux0
# restart mysql server in safemode
/bin/bash service mysql stop
mysqld_safe --skip-grant-tables &

# wait for the mysql server to start
while :
do
    if pgrep -x "mysqld" > /dev/null
    then
        sleep 1
        break
    else
        echo "mysql is not started yet"
        ps aux | egrep mysqld
        sleep 1
    fi
done

cd /root/apache-bench

# create mysql db and table
php -f create-db-tbl.php

# load db by the generated dataset
mysqlimport -u root --local benchmark_0 benchmark_tbl.ini --lines-terminated-by="\n" --fields-terminated-by=","

# take a checkpoint
/sbin/m5 checkpoint

#THIS IS WHERE EXECUTION BEGINS FROM AFTER RESTORING FROM CKPT
if [ "$RUNSCRIPT_VAR" -eq 1 ]
then
    # Signal our future self not to recurse infinitely
    export RUNSCRIPT_VAR=2
    # Read the script for the checkpoint restored execution
    echo "Loading new script..."
    /sbin/m5 readfile > /tmp/runscript1.sh

    # Execute the new runscript
    if [ -s /tmp/runscript1.sh ]
    then
        /bin/bash /tmp/runscript1.sh
    else
        echo "Script not specified"
    fi
fi

echo "Fell through script. Exiting ..."
/sbin/m5 exit 1
